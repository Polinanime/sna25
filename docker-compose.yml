version: '3'

services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-realworld}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app_network

  backend:
    image: ${DOCKER_HUB_USERNAME}/sna25-backend:latest
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_NAME=${DB_NAME:-realworld}
      - DB_SSLMODE=disable
    volumes:
      - backend_data:/app/data
    depends_on:
      - postgres
    networks:
      - app_network

  frontend:
    image: ${DOCKER_HUB_USERNAME}/sna25-frontend:latest
    restart: unless-stopped
    ports:
      - "80:3000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=production
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  backend_data:
  postgres_data: