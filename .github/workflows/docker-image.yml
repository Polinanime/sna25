name: Docker-hub push

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  workflow_dispatch:
    inputs:
      deploy_backend:
        description: "Deploy backend"
        required: true
        default: "true"
        type: boolean
      deploy_frontend:
        description: "Deploy frontend"
        required: true
        default: "true"
        type: boolean
      environment:
        description: "Environment to deploy to"
        required: false
        default: "production"
        type: choice
        options:
          - production
          - staging
          - development

jobs:
  backend:
    name: Build and Deploy Backend
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.deploy_backend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          cache-dependency-path: backend/go.sum

      - name: Install dependencies
        run: go mod download

      - name: Test
        run: go test ./... -v

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sna25-backend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/sna25-backend:latest
          cache-to: type=inline

  frontend:
    name: Build and Deploy Frontend
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.deploy_frontend == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: |
          corepack enable pnpm
          pnpm install --frozen-lockfile

      - name: Build
        run: pnpm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Debug - Check frontend directory structure
        run: |
          ls -la
          if [ -d ".next" ]; then echo ".next directory exists"; else echo "No .next directory"; fi
          if [ -d ".next/standalone" ]; then echo ".next/standalone exists"; else echo "No .next/standalone directory"; fi
          ls -la .next 2>/dev/null || echo "Cannot list .next contents"
        working-directory: ./frontend

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/sna25-frontend:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/sna25-frontend:latest
          cache-to: type=inline
